model exam {
  id            Int      @id @default(autoincrement())
  title         String   @db.VarChar(50)
  description   String   @db.VarChar(100)
  date          DateTime @db.DateTime
  time          DateTime @db.Time
  duration      DateTime @db.Time
  maximum_marks Int
  course_id     Int
  batch_id      Int?
  division_id   Int?

  course   course    @relation(fields: [course_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_exam_course")
  batch    batch?    @relation(fields: [batch_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_exam_batch")
  division division? @relation(fields: [division_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_exam_division")

  enrollments exam_enrollment[]

  @@index([course_id], map: "INDX_exam_course")
  @@index([division_id], map: "INDX_exam_division")
}

//exam_student //exam_attendance //marks //grade
model exam_enrollment {
  id                  Int    @id @default(autoincrement())
  // seating arrangement - class, bench, lab, computer cubicle,...
  answer_paper_number String @db.VarChar(255)
  marks_obtained      Int
  row_num             Int?
  col_num             Int?
  exam_id             Int
  enrollment_id       Int
  room_id             Int?

  exam       exam       @relation(fields: [exam_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_exam_ee_exam")
  enrollment enrollment @relation(fields: [enrollment_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_ee_enrollment")
  room       room?      @relation(fields: [room_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_ee_room")

  @@unique([exam_id, enrollment_id], map: "UK_ee_exam_enrollment")
  @@index([exam_id], map: "INDX_ee_exam")
  @@index([enrollment_id], map: "INDX_ee_enrollment")
  @@index([room_id], map: "INDX_ee_room")
}

enum exam_type {
  internal
  external
}
